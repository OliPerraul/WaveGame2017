<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PlaceHolder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_DebugPlayer</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SETS STATES AND INITIAL VARIABLES

//Wave Mechanics
landed = false;
wave_size = 0;

my_w = 0;

//distance from the floor
height = 0;

Max_Jumps = 2;
Num_Jumps = 0;

image_speed = 0;

Anim_Speed = 0.2;

Init_Speed = 1.3;
Speed = Init_Speed; 
Jump_Force = 4;

Init_Grav = 0.2;
Gravity = Init_Grav;

H_Speed = 0;
V_Speed = 0;

Min_Jump_Height = 10;

enum Animation_States { //animation states
    SLAMMING,
    JUMPING,
    LANDING,
    IDLE
}

enum Player_States {
    ON_GROUND,
    ON_AIR,
    DEATH
}



Current_State = Player_States.ON_GROUND;
Animation_State = Animation_States.IDLE;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calls on Various scripts
//emits particles on landing
scr_ParticleOnLanding();
height = Player_CalculateHeight();

//call on spawn wave //TODO: set wave size relative to jump
scr_SpawnWave(height);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ANIMATION STATES

switch (Animation_State) { //event_user(0) stops the animation after it played

    case Animation_States.IDLE: //idle
    sprite_index = spr_playerIdle;
    
    image_speed = 1; //reset image speed to 1.5(or watherver need for this anim)
    event_user(0);
    
  
    break
    
     case Animation_States.LANDING: //land
    sprite_index = spr_playerLand;
    
    image_speed = 1; 
    event_user(0);
  
    break
    
     case Animation_States.JUMPING: //jmp
    sprite_index = spr_playerJmp;
     image_speed = 1; 
    event_user(0);
  
    break
    
     case Animation_States.SLAMMING: //slam
    sprite_index = spr_playerSlam;
     image_speed = .5; 
    event_user(0);
  
    break
   
    
}

if (H_Speed != 0) {
    image_xscale = sign(H_Speed);
} else {
    image_xscale = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SWITCHES STATES AND CHECKS INPUT

switch (Current_State) {

    case Player_States.ON_GROUND:
        Player_Gravity();
        Player_Collision(true, true);
        H_Speed *= 0.95;
        image_index = 0;
        image_speed = 0;
        break
    case Player_States.ON_AIR:
        image_speed = Anim_Speed;
        Player_On_Air();
        Player_Gravity();
        Player_Collision(true, true);
        //scr_Dash();
        break;
    case Player_States.DEATH:
        break;
    default:
        break;
}

Collide_With_Wave();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop animation after it played

if(image_index == image_number-1) //stops the animation if 
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
