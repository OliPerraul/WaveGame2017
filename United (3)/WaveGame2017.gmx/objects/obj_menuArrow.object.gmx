<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menuArrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-202</depth>
  <persistent>0</persistent>
  <parentName>obj_menuComponent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
START_YPOS = y-20;//constant
target_Ypos = y;

//ref to the menu
menu = instance_find(obj_menu, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get player inputs
//show_debug_message(menu.selected_item);

if(global.gp[0] == true)
{
      if(gamepad_axis_value(0, gp_axislv) &gt; 0.2) &amp;&amp; (target_reached) &amp;&amp; (axisReset)
      { 
        target_Ypos+=20;
        if(menu.selected_item != 2)
        {
            menu.selected_item++;
        }
        axisReset = false;
      }
      if(gamepad_axis_value(0, gp_axislv) &lt; -0.2) &amp;&amp; (target_reached) &amp;&amp; (axisReset)
      {
        target_Ypos-=20;
        if(menu.selected_item != 0)
        {
            menu.selected_item--;
        }
        axisReset = false;
      }
      if(gamepad_axis_value(0, gp_axislv) &gt; -0.2) &amp;&amp; (gamepad_axis_value(0, gp_axislv) &lt; 0.2)
      {
        axisReset = true;
      }
}
else
{
    if(keyboard_check_pressed(vk_down)) &amp;&amp; (target_reached)
    {
        target_Ypos+=20;
        if(menu.selected_item != 2)
        menu.selected_item++;
     
    }
    
    if(keyboard_check_pressed(vk_up)) &amp;&amp; (target_reached)
    {
        target_Ypos-=20;
        if(menu.selected_item != 0)
        menu.selected_item--;
    }    
}

target_Ypos = clamp(target_Ypos, START_YPOS, START_YPOS+40);

//check if target reached
if(y = target_Ypos)
{
    target_reached = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///lerp arrow
y = lerp(y, target_Ypos, .2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
